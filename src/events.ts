import { Event } from './Event';
import { Line } from './Line';
import { TimeRange } from './TimeRange';

/**
 * Tag interface for all events generated by a Timeline instance.
 */
export interface TimelineEvent {
}

/**
 * Event generated when a Timeline Event was clicked.
 */
export interface EventClickEvent extends TimelineEvent {
    /**
     * The event that was clicked.
     */
    event: Event;
}

/**
 * Event generated when the header of a Timeline Line was
 * clicked.
 */
export interface HeaderClickEvent extends TimelineEvent {
    /**
     * The line who's header was clicked.
     */
    line: Line;
}

/**
 * Event generated when the viewport has changed.
 */
export interface ViewportChangeEvent extends TimelineEvent {
    /**
     * Left bound of the visible time range
     */
    start: number;

    /**
     * Right bound of the visible time range
     */
    stop: number;
}

/**
 * Event generated when the mouse is moving over
 * the viewport.
 */
export interface ViewportMouseMoveEvent extends TimelineEvent {
    /**
     * Horizontal coordinate of the mouse pointer, relative to
     * the browser page.
     */
    clientX: number;

    /**
     * Vertical coordinate of the mouse pointer, relative to the
     * browser page.
     */
    clientY: number;

    /**
     * Horizontal coordinate of the mouse pointer, relative to
     * the viewport of the Timeline instance.
     */
    viewportX: number;

    /**
     * Vertical coordinate of the mouse pointer, relative to
     * the viewport of the Timeline instance.
     */
    viewportY: number;

    /**
     * Time matching with the coordinates of the mouse pointer.
     */
    time: number;
}

/**
 * Event generating when the mouse is moving outside the viewport.
 */
export interface ViewportMouseOutEvent extends TimelineEvent {
    /**
     * Horizontal coordinate of the mouse pointer, relative to
     * the browser page.
     */
    clientX: number;

    /**
     * Vertical coordinate of the mouse pointer, relative to the
     * browser page.
     */
    clientY: number;
}

/**
 * Event generated when the selected range has changed.
 */
export interface ViewportSelectionEvent extends TimelineEvent {
    /**
     * Selected time range (if any).
     */
    selection?: TimeRange;
}

export type TimelineEventHandlers = {
    'eventclick': Array<(ev: EventClickEvent) => void>;
    'headerclick': Array<(ev: HeaderClickEvent) => void>;
    'viewportchange': Array<(ev: ViewportChangeEvent) => void>;
    'viewportmousemove': Array<(ev: ViewportMouseMoveEvent) => void>;
    'viewportmouseout': Array<(ev: ViewportMouseOutEvent) => void>;
    'viewportselection': Array<(ev: ViewportSelectionEvent) => void>;
};
